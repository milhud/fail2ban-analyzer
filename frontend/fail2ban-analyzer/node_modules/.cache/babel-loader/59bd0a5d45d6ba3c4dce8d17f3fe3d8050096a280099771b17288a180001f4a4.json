{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hudso\\\\code\\\\fail2ban-analyzer2\\\\frontend\\\\fail2ban-analyzer\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [graphUrl, setGraphUrl] = useState(null);\n  const [ipCounts, setIpCounts] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Handle file input change\n  const handleFileChange = event => {\n    if (event.target.files) {\n      setFile(event.target.files[0]);\n    }\n  };\n\n  // Handle form submit\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) return;\n    setLoading(true); // Start loading while sending request\n\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Handle response containing IP counts and graph URL\n      setIpCounts(response.data.counts);\n      setGraphUrl(`http://localhost:5000/graphs/graph.png`); // Ensure correct graph URL\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    } finally {\n      setLoading(false); // Stop loading when request completes\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Fail2Ban Log Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"This tool helps you analyze Fail2Ban log files, showing the IP addresses that have made failed login attempts, and visualizing the number of attempts with a graph.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"instructions-title\",\n        children: \"Instructions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Step 1: Upload your Fail2Ban log file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Step 2: The tool will analyze the log file and show the IP addresses with failed login attempts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Step 3: A graph will be displayed, showing the number of failed login attempts for each IP address.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"upload-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: \"submit-btn\",\n          children: loading ? 'Uploading...' : 'Upload Log File'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), ipCounts && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ip-counts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"counts-title\",\n          children: \"Failed Login Attempts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ip-list\",\n          children: Object.entries(ipCounts).map(([ip, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ip-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ip-address\",\n              children: ip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"attempts-count\",\n              children: [count, \" attempts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)]\n          }, ip, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-section\",\n      children: graphUrl ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"graph-title\",\n          children: \"Login Attempts Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: graphUrl,\n          alt: \"Graph\",\n          className: \"graph-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-graph-text\",\n        children: \"No graph available yet. Upload a log file to see the graph.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pJ+SYcZ5VFoa8yumCuc1N/v/rNg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","graphUrl","setGraphUrl","ipCounts","setIpCounts","loading","setLoading","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","data","counts","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","disabled","Object","entries","map","ip","count","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/hudso/code/fail2ban-analyzer2/frontend/fail2ban-analyzer/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [file, setFile] = useState<File | null>(null);\n  const [graphUrl, setGraphUrl] = useState<string | null>(null);\n  const [ipCounts, setIpCounts] = useState<{ [key: string]: number } | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  // Handle file input change\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files) {\n      setFile(event.target.files[0]);\n    }\n  };\n\n  // Handle form submit\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!file) return;\n\n    setLoading(true); // Start loading while sending request\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      // Handle response containing IP counts and graph URL\n      setIpCounts(response.data.counts);\n      setGraphUrl(`http://localhost:5000/graphs/graph.png`); // Ensure correct graph URL\n\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    } finally {\n      setLoading(false); // Stop loading when request completes\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      {/* Instructions and Description Section */}\n      <div className=\"left-section\">\n        <h1 className=\"title\">Fail2Ban Log Analyzer</h1>\n        <p className=\"description\">\n          This tool helps you analyze Fail2Ban log files, showing the IP addresses that have made failed login attempts, and visualizing the number of attempts with a graph.\n        </p>\n        <h2 className=\"instructions-title\">Instructions:</h2>\n        <ul className=\"instructions\">\n          <li>Step 1: Upload your Fail2Ban log file.</li>\n          <li>Step 2: The tool will analyze the log file and show the IP addresses with failed login attempts.</li>\n          <li>Step 3: A graph will be displayed, showing the number of failed login attempts for each IP address.</li>\n        </ul>\n\n        {/* Upload Form */}\n        <form onSubmit={handleSubmit} className=\"upload-form\">\n          <input type=\"file\" onChange={handleFileChange} className=\"file-input\" />\n          <button type=\"submit\" disabled={loading} className=\"submit-btn\">\n            {loading ? 'Uploading...' : 'Upload Log File'}\n          </button>\n        </form>\n\n        {/* IP counts Section */}\n        {ipCounts && (\n          <div className=\"ip-counts\">\n            <h3 className=\"counts-title\">Failed Login Attempts</h3>\n            <div className=\"ip-list\">\n              {Object.entries(ipCounts).map(([ip, count]) => (\n                <div key={ip} className=\"ip-item\">\n                  <span className=\"ip-address\">{ip}</span>\n                  <span className=\"attempts-count\">{count} attempts</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Right section for displaying the graph */}\n      <div className=\"right-section\">\n        {graphUrl ? (\n          <>\n            <h3 className=\"graph-title\">Login Attempts Graph</h3>\n            <img src={graphUrl} alt=\"Graph\" className=\"graph-img\" />\n          </>\n        ) : (\n          <p className=\"no-graph-text\">No graph available yet. Upload a log file to see the graph.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}