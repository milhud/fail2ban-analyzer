{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hudso\\\\code\\\\fail2ban-analyzer2\\\\frontend\\\\fail2ban-analyzer\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [graphUrl, setGraphUrl] = useState(null);\n  const [ipCounts, setIpCounts] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = event => {\n    if (event.target.files) {\n      setFile(event.target.files[0]);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) return;\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setIpCounts(response.data.counts);\n      setGraphUrl(`http://localhost:5000/graphs/graph.png`);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fail2Ban Log Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Analyze Fail2Ban log files to detect failed login attempts and visualize them in an interactive graph.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"How It Works\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This tool processes your Fail2Ban log files to identify failed login attempts, showing which IPs are causing the issues. Follow these steps:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Upload your Fail2Ban log file.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"View the list of IPs and their failed attempt counts.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"See a graph visualization of the data.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"upload-section\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"upload-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"file-label\",\n              htmlFor: \"file-input\",\n              children: \"Choose a log file:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"file-input\",\n              onChange: handleFileChange,\n              className: \"file-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: loading,\n              className: `submit-btn ${loading ? 'disabled' : ''}`,\n              children: loading ? 'Processing...' : 'Upload'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), ipCounts && /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"ip-counts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Failed Login Attempts by IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ip-list\",\n            children: Object.entries(ipCounts).map(([ip, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ip-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: ip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [count, \" attempts\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)]\n            }, ip, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-column\",\n        children: graphUrl ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Graph Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: graphUrl,\n            alt: \"Graph of failed login attempts\",\n            className: \"graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-graph\",\n          children: \"Upload a file to see the graph.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pJ+SYcZ5VFoa8yumCuc1N/v/rNg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","graphUrl","setGraphUrl","ipCounts","setIpCounts","loading","setLoading","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","data","counts","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","disabled","Object","entries","map","ip","count","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/hudso/code/fail2ban-analyzer2/frontend/fail2ban-analyzer/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [file, setFile] = useState<File | null>(null);\n  const [graphUrl, setGraphUrl] = useState<string | null>(null);\n  const [ipCounts, setIpCounts] = useState<{ [key: string]: number } | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files) {\n      setFile(event.target.files[0]);\n    }\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!file) return;\n\n    setLoading(true);\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n\n      setIpCounts(response.data.counts);\n      setGraphUrl(`http://localhost:5000/graphs/graph.png`);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {/* Header */}\n      <header className=\"app-header\">\n        <h1>Fail2Ban Log Analyzer</h1>\n        <p>\n          Analyze Fail2Ban log files to detect failed login attempts and visualize them in an interactive graph.\n        </p>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"app-main\">\n        {/* Left Column: Instructions and Form */}\n        <div className=\"left-column\">\n          <section className=\"instructions\">\n            <h2>How It Works</h2>\n            <p>\n              This tool processes your Fail2Ban log files to identify failed login attempts, \n              showing which IPs are causing the issues. Follow these steps:\n            </p>\n            <ol>\n              <li>Upload your Fail2Ban log file.</li>\n              <li>View the list of IPs and their failed attempt counts.</li>\n              <li>See a graph visualization of the data.</li>\n            </ol>\n          </section>\n\n          <section className=\"upload-section\">\n            <form onSubmit={handleSubmit} className=\"upload-form\">\n              <label className=\"file-label\" htmlFor=\"file-input\">\n                Choose a log file:\n              </label>\n              <input\n                type=\"file\"\n                id=\"file-input\"\n                onChange={handleFileChange}\n                className=\"file-input\"\n              />\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className={`submit-btn ${loading ? 'disabled' : ''}`}\n              >\n                {loading ? 'Processing...' : 'Upload'}\n              </button>\n            </form>\n          </section>\n\n          {ipCounts && (\n            <section className=\"ip-counts\">\n              <h3>Failed Login Attempts by IP</h3>\n              <div className=\"ip-list\">\n                {Object.entries(ipCounts).map(([ip, count]) => (\n                  <div key={ip} className=\"ip-item\">\n                    <span>{ip}</span>\n                    <span>{count} attempts</span>\n                  </div>\n                ))}\n              </div>\n            </section>\n          )}\n        </div>\n\n        {/* Right Column: Graph */}\n        <div className=\"right-column\">\n          {graphUrl ? (\n            <>\n              <h2>Graph Visualization</h2>\n              <img src={graphUrl} alt=\"Graph of failed login attempts\" className=\"graph\" />\n            </>\n          ) : (\n            <p className=\"no-graph\">Upload a file to see the graph.</p>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}